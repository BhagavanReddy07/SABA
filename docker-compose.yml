services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: saba
      POSTGRES_PASSWORD: saba
      POSTGRES_DB: saba
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      UVICORN_HOST: 0.0.0.0
      UVICORN_PORT: 5000
      JWT_SECRET_KEY: change-me
      FRONTEND_ORIGIN: http://localhost:3000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: saba
      POSTGRES_USER: saba
      POSTGRES_PASSWORD: saba
      DATABASE_URL: postgresql://saba:saba@postgres:5432/saba
      REDIS_URL: redis://redis:6379/0
      REDIS_URL_CELERY: redis://redis:6379/0
      REDIS_URL_CHAT: redis://redis:6379/1
      # SENDGRID_API_KEY: "your-key"
      SENDGRID_FROM_EMAIL: "you@example.com"
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["celery", "-A", "app.worker.celery", "worker", "-l", "info"]
    environment:
      JWT_SECRET_KEY: change-me
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: saba
      POSTGRES_USER: saba
      POSTGRES_PASSWORD: saba
      DATABASE_URL: postgresql://saba:saba@postgres:5432/saba
      REDIS_URL: redis://redis:6379/0
      REDIS_URL_CELERY: redis://redis:6379/0
      REDIS_URL_CHAT: redis://redis:6379/1
      # SENDGRID_API_KEY: "your-key"
    depends_on:
      - postgres
      - redis

  frontend:
    image: node:18-alpine
    working_dir: /app
    command: sh -c "apk add --no-cache libc6-compat && npm install && npm run dev"
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://backend:5000
      GEMINI_API_KEY: ""
    volumes:
      - ./:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  pgdata:
